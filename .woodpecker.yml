pipeline:
  build:
    # we use a fedora container which is the best fit for copr and opbs
    image: fedora
    # this is triggered by push events ... which might be to heavy for daily business
    when:
      event: push
    commands: 
       # Save the Path where the repo content is stored
       - MYPATH=`pwd`
       # we start with the COPR part
       # we install all needed tools
       - dnf -y install @development-tools @rpm-development-tools copr-cli make
       # grab the sources and create RPM build environment
       - ./getsources.sh
       - ls -altr 
       - pwd
       # Build the SRPM packag
       - rpmbuild -bs *.spec
       # we create the directory structure to store the COPR token
       # please note $HOME is not the working directory where the content is being check out
       # Right it seems to be /root
       - mkdir -p "$HOME/.config"
       - cd "$HOME/.config"
       # Multline secrets cannot be pushed into files with "echo" command
       # So we use cat-EOF approach
       # Since this is multiline in YAML we use the "|" to pretect the newlines
       - |
         cat > copr << EOF
         $${COPR_API_TOKEN}
         EOF
       - cd 
       # Submit COPR build
       - copr-cli build --nowait dummy $HOME/rpmbuild/SRPMS/*.src.rpm
       #
       #
       #
       # And now the OBS part
       # we install the needed toosl
       - dnf -y install osc wget
       # we create the directory structure to store the OBS token
       # please note $HOME is not the working directory where the content is being check out
       # Right it seems to be /root
       - mkdir -p "$HOME/.config/osc"
       - cd  "$HOME/.config/osc"
       # Again a multiline secret (see above)
       - |
         cat > oscrc << EOF
         $${OBS_API_TOKEN}
         EOF
       - cd $MYPATH
       # prepare and trigger OBS package build
       # this could entirely done via YAML but I have outsourced it to a shell script
       - ./submitobsbuild.sh
    secrets: [ copr_api_token, obs_api_token ]
